caddy help :
 #list all option
 $caddy

 # help run
 $caddy help run 

 #caddy adapt option help
 $caddy help adapt 

 #run caddy with caddyfile as forground process 
 $caddy run

 #run with specific config
 $caddy run --config ../setting/caddyfile

 #run wiht last setting
 $caddy run --resume

  #check config by curl localhost:2019
  $curl http://localhost:2019/config/ | jq


 #dump caddyfile in console with json format
 $caddy adapt --config /path/caddyfile

 #trans caddyfile to json file
 $caddy adapt --config /path/caddyfile > caddyfile.json

 #trans caddyfile to json file with well format
 $caddy adapt --config /path/caddyfile | jq '.' > caddy.json






 

使用 caddy help 方式
1. 先 caddy (叫出可用主選項help文件)
2. 針對主選項進行 help可看到子選項
ex: 叫出 file-server子選項 , reverse-proxy 子選項
   caddy help file-server
   caddy help reverse-proxy


    #查詢正在執行中caddy 的組態 ,  注意: /config/ 小寫的c
    # Port 2019 是 Caddy Admin port ,
    # Port 2015 是Caddy 預設啟動 port , 假如沒指定port時
    $curl localhost:2019/config/

    #以當前目錄下的caddy.jso (組態json)設定正在執行中的 caddy
    $curl localhost:2019/load -X POST -H "Content-Type: application/json" -d @caddy.json




./caddy #help file
 ./caddy help adapt  # caddy adapt help
./caddy start  //default listen on 2019
./caddy stop
./caddy reload
./caddy run --config path/caddyfile
./caddy adapt | jq
./caddy adapt --config /path/Caddyfile | jq    #show in json file
./caddy adapt Caddyfile | jq '.' > caddy.json  #caddyfile porting to json file


curl localhost:2019/load \
  -X POST \
  -H "Content-Type: application/json" \
  -d @caddy.json

透過Caddy API 去設定Caddy 組態,這些設定都會被記下(~/.config/caddy/autosave.json),以便下次可以使用 ./caddy run --resume 啟動.
./caddy run --resume




./caddy file-server   //default port: 2015
./caddy file-server -browse
./caddy file-server --listen :80
./caddy file-server --browse --listen :80
./caddy reverse-proxy --to :9000   // 2015->9000
./caddy reverse-proxy --from :80 --to 127.0.0.1:9000
./caddy reverse-proxy --from example.com --to localhost:9000








####################################################
# Run Caddy as Linux service

  注意事項:
   1)確認啟動 caddy的權限 （建立一個專屬user,與group為 caddy 專用)
   2) 使用官方的 caddy.service 檔
      注意 caddy.service中 caddy binary的目錄是否正確 (包含啟動服務時,與reload服務時)
      注意 Caddyfile 是否複製到指定的地方,因為systemd啟動時會去讀取Caddyfile
   3) 常用指令參考
   
       #除了 systemctl status, 其它都加上sudo
      $ systemctl status caddy
      $ sudo systemctl start caddy 
      $ sudo systemctl reload caddy 
      $ sudo systemctl stop caddy

      檢查caddy吐出的systemd log
      $sudo journalctl -u caddy





step1 
 將 Caddy binary 複製到 /usr/bin 
   $sudo cp caddy /usr/bin/

step2 測試是否正常動作

   $caddy version

step3 建立一個叫 caddy 的系統群組 "caddy"

   $groupadd --system caddy 

step4 建立caddy 專屬使用者,命名為 caddy, 必給予建立/寫入 home的權限 

   $useradd --system \
    --gid caddy \
    --create-home \
    --home-dir /var/lib/caddy \
    --shell /usr/sbin/nologin \
    --comment "Caddy web server" \
    caddy

step5 準備 caddy.service
  再一次確認這兩個欄位的值是不是正確
  ExecStart=/usr/bin/caddy run --config /etc/caddy/Caddyfile --adapter caddyfile --resume --environ
  ExecReload=/usr/bin/caddy reload --config /etc/caddy/Caddyfile --adapter caddyfile

   確認系統上有 caddy binary 與 systemd 這兩個東西


step6 將你的 Caddyfile 複製到 /etc/caddy/Caddyfile (參閱: caddy.sercice上 ExecStart,ExecReload section)


step7 第一次使用 systemd 啟動 必須執行下面

   $ sudo systemctl daemon-reload
   $ sudo systemctl enable caddy 
   $ sudo systemctl start caddy 

   上面指令執行後.確認一下, caddy啟動否
    $  systemctl status caddy


  ©©©©  使用systemed官方的service 預設會將 Caddy 輸出導向 journalctl ©©©© 
     journalctl 可用於檢索 systemd 日誌, 如果不帶任何參數直接調用此命令， 
     那麼將顯示所有日誌內容(從最早一條日誌記錄開始)。

    $sudo journalctl -u caddy



 啟動服務與重新整理 

  $sudo systemctl reload caddy 

  $sudo systemctl stop caddy
 





Caddy Config
Caddy 組態檔案,ssl certificate 都會放到 /etc/caddy 目錄

啟動Caddy , 當前config會被寫到  ~/.config/caddy/autosave.json
# 載入上次啟動時的設定 Caddyfile (上次啟動的設定會被自動存在 ~/.config/caddy/autosave.json)
$caddy run --resume


    #查詢正在執行中caddy 的組態 ,  注意: /config/ 小寫的c
    # Port 2019 是 Caddy Admin port ,
    # Port 2015 是Caddy 預設啟動 port , 假如沒指定port時
    $curl localhost:2019/config/





3)) Caddy 重要的文件放在 Data directory

  對於除了 Caddyfile 命名的組態檔外, 其他命名的組態檔你想放哪都可以,


  Caddy 會將 TLS 憑證和其他重要的文件放在一種資料目錄,
  假如你有設定 XDG_DATA_HOME這個環境變數,這就會是 $XDG_DATA_HOME/caddy

  若沒有設定XDG_DATA_HOME, 就會依平台不同而有所不同
   Linux, BSD平台會位於   $HOME/.local/share/caddy
   macOS平台會位於        $HOME/Library/Application Support/Caddy
   Windows平台會位於      %AppData%\Caddy

4) Caddy 組態目錄

為了能方便使用上一次啟動Caddy 時的組態, 或者是caddy reolad失敗時會自動以上次的組態啟動 ,或是執行 caddy --resume (以上次組態執行Caddy啟動)
Caddy 會將上次順利啟動的Caddy的組態存放在 $XDG_CONFIG_HOME/caddy 目錄,假如你用設定 $XDG_CONFIG_HOME環境變數的話
否則依照平台的不同有所差異

   Linux, BSD平台會位於   $HOME/.config/caddy
   macOS平台會位於        $HOME/Library/Application Support/Caddy
   Windows平台會位於      %AppData%\Caddy
